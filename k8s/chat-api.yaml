apiVersion: v1
kind: ConfigMap
metadata:
  name: chat-api-config
  namespace: org-chatbot
data:
  app.yaml: |
    # Chat API Configuration
    server:
      host: "0.0.0.0"
      port: 8000
      workers: 4
    
    redis:
      host: "redis"
      port: 6379
      password: "${REDIS_PASSWORD}"
      db: 0
      max_connections: 20
      timeout: 5
    
    ollama:
      base_url: "http://ollama:11434"
      default_model: "llama3.2:3b"
      fast_model: "phi3:3.8b"
      timeout: 120
      max_retries: 3
    
    postgres:
      host: "postgres"
      port: 5432
      database: "org_chatbot"
      username: "postgres"
      password: "${POSTGRES_PASSWORD}"
      pool_size: 10
    
    security:
      jwt_secret: "${JWT_SECRET}"
      jwt_expiry: 3600
      rate_limit_per_minute: 60
      cors_origins: ["*"]
    
    monitoring:
      enable_metrics: true
      metrics_port: 9090
      health_check_interval: 30
---
apiVersion: v1
kind: Secret
metadata:
  name: chat-api-secret
  namespace: org-chatbot
type: Opaque
data:
  jwt-secret: c3VwZXItc2VjdXJlLWp3dC1zZWNyZXQta2V5LWZvci1wcm9kdWN0aW9u  # base64 encoded
  redis-password: c2VjdXJlLXJlZGlzLXBhc3N3b3JkLTEyMw==  # base64 encoded
  postgres-password: c2VjdXJlLXBvc3RncmVzLXBhc3N3b3JkLTEyMw==  # base64 encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-api
  namespace: org-chatbot
spec:
  replicas: 3
  selector:
    matchLabels:
      app: chat-api
  template:
    metadata:
      labels:
        app: chat-api
    spec:
      containers:
      - name: chat-api
        image: org-chatbot/chat-api:latest
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: chat-api-secret
              key: redis-password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: chat-api-secret
              key: postgres-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: chat-api-secret
              key: jwt-secret
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        volumeMounts:
        - name: config
          mountPath: /app/config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
      volumes:
      - name: config
        configMap:
          name: chat-api-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - chat-api
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: chat-api
  namespace: org-chatbot
  labels:
    app: chat-api
spec:
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  - port: 9090
    targetPort: 9090
    name: metrics
  selector:
    app: chat-api
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: chat-api-hpa
  namespace: org-chatbot
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chat-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: chat-api-pdb
  namespace: org-chatbot
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: chat-api
