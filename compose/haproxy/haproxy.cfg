global
    daemon
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/haproxy
    ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 20s
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

# Rate Limiting
frontend rate_limit
    bind *:80
    bind *:443 ssl crt /etc/ssl/haproxy/cert.pem
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 100 }
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Redirect HTTP to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }
    
    # Health check endpoint
    acl is_health path_beg /health
    use_backend health_backend if is_health
    
    # Metrics endpoint
    acl is_metrics path_beg /metrics
    use_backend metrics_backend if is_metrics
    
    # Default to chat API
    default_backend chat_api_backend

# Health Check Backend
backend health_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server api-1 chat-api-1:8000 check
    server api-2 chat-api-2:8000 check
    server api-3 chat-api-3:8000 check

# Metrics Backend
backend metrics_backend
    balance roundrobin
    
    server api-1 chat-api-1:8000 check
    server api-2 chat-api-2:8000 check
    server api-3 chat-api-3:8000 check

# Main Chat API Backend
backend chat_api_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Connection pooling
    option http-keep-alive
    
    # Server configuration
    server api-1 chat-api-1:8000 check maxconn 1000
    server api-2 chat-api-2:8000 check maxconn 1000
    server api-3 chat-api-3:8000 check maxconn 1000
    
    # Timeouts for streaming
    timeout server 5m
    timeout client 5m

# Statistics
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
